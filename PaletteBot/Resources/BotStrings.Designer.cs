//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PaletteBot.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class BotStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal BotStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PaletteBot.Resources.BotStrings", typeof(BotStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, my default prefix is now `{0}`..
        /// </summary>
        public static string Admin_changeGlobalPrefix {
            get {
                return ResourceManager.GetString("Admin_changeGlobalPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright, my prefix on this server is now `{0}`..
        /// </summary>
        public static string Admin_changeServerPrefix {
            get {
                return ResourceManager.GetString("Admin_changeServerPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Well, looks like %user% left....
        /// </summary>
        public static string Admin_defaultUserByeText {
            get {
                return ResourceManager.GetString("Admin_defaultUserByeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome, %mention%! Hope you enjoy your time here!.
        /// </summary>
        public static string Admin_defaultUserGreetText {
            get {
                return ResourceManager.GetString("Admin_defaultUserGreetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarting... I&apos;ll be back in a moment!.
        /// </summary>
        public static string Admin_restart {
            get {
                return ResourceManager.GetString("Admin_restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, I will now be playing &quot;{0}&quot;..
        /// </summary>
        public static string Admin_setGame {
            get {
                return ResourceManager.GetString("Admin_setGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, my username is now &quot;{0}&quot;..
        /// </summary>
        public static string Admin_setName {
            get {
                return ResourceManager.GetString("Admin_setName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, I will now be referred to as &quot;{0}&quot; on this server..
        /// </summary>
        public static string Admin_setNick {
            get {
                return ResourceManager.GetString("Admin_setNick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully updated status..
        /// </summary>
        public static string Admin_setStatus {
            get {
                return ResourceManager.GetString("Admin_setStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutting down....
        /// </summary>
        public static string Admin_shutdown {
            get {
                return ResourceManager.GetString("Admin_shutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type `{0}aki` to play again!.
        /// </summary>
        public static string Akinator_AgainPrompt {
            get {
                return ResourceManager.GetString("Akinator_AgainPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid answer. Valid answers are &quot;yes&quot; or &quot;no&quot;..
        /// </summary>
        public static string Akinator_akianswer_InvalidAnswerG {
            get {
                return ResourceManager.GetString("Akinator_akianswer_InvalidAnswerG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid answer. Valid answers are &quot;yes&quot;, &quot;no&quot;, &quot;dunno&quot;, &quot;probably&quot;, or &quot;probably not&quot;..
        /// </summary>
        public static string Akinator_akianswer_InvalidAnswerQ {
            get {
                return ResourceManager.GetString("Akinator_akianswer_InvalidAnswerQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Akinator game is running. Therefore, this command cannot be used..
        /// </summary>
        public static string Akinator_akianswer_NoGameRunning {
            get {
                return ResourceManager.GetString("Akinator_akianswer_NoGameRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Akinator game has been stopped..
        /// </summary>
        public static string Akinator_akiEnd {
            get {
                return ResourceManager.GetString("Akinator_akiEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid region!.
        /// </summary>
        public static string Akinator_akiregion_invalidRegion {
            get {
                return ResourceManager.GetString("Akinator_akiregion_invalidRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully set your Akinator region to `{0}`.
        /// </summary>
        public static string Akinator_akiregion_success {
            get {
                return ResourceManager.GetString("Akinator_akiregion_success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This character has been played {0} times before..
        /// </summary>
        public static string Akinator_CharacterPlayedTimes {
            get {
                return ResourceManager.GetString("Akinator_CharacterPlayedTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, Akinator on PaletteBot is not yet ready! Check back later!.
        /// </summary>
        public static string Akinator_comingSoon {
            get {
                return ResourceManager.GetString("Akinator_comingSoon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have defeated me!.
        /// </summary>
        public static string Akinator_DefeatedDesc {
            get {
                return ResourceManager.GetString("Akinator_DefeatedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bravo!.
        /// </summary>
        public static string Akinator_DefeatedTitle {
            get {
                return ResourceManager.GetString("Akinator_DefeatedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Powered by Akinator.NET - Akinator.NET is a WIP implementation of the Akinator API.
        /// </summary>
        public static string Akinator_EmbedFooter {
            get {
                return ResourceManager.GetString("Akinator_EmbedFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error!.
        /// </summary>
        public static string Akinator_ErrorTitle {
            get {
                return ResourceManager.GetString("Akinator_ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **FINAL GUESS**.
        /// </summary>
        public static string Akinator_FinalGuess {
            get {
                return ResourceManager.GetString("Akinator_FinalGuess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I love playing with you!.
        /// </summary>
        public static string Akinator_GuessCorrectDesc {
            get {
                return ResourceManager.GetString("Akinator_GuessCorrectDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Great! Guessed right one more time..
        /// </summary>
        public static string Akinator_GuessCorrectTitle {
            get {
                return ResourceManager.GetString("Akinator_GuessCorrectTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type `{0}aa [answer]` where `[answer]` is &quot;yes&quot; or &quot;no&quot;..
        /// </summary>
        public static string Akinator_GuessPrompt {
            get {
                return ResourceManager.GetString("Akinator_GuessPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ranking as **#{0}**.
        /// </summary>
        public static string Akinator_GuessRank {
            get {
                return ResourceManager.GetString("Akinator_GuessRank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here&apos;s my guess:.
        /// </summary>
        public static string Akinator_GuessTitle {
            get {
                return ResourceManager.GetString("Akinator_GuessTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hello, I am Akinator! Think about a real or fictional character. I will try to guess who it is..
        /// </summary>
        public static string Akinator_IntroDesc {
            get {
                return ResourceManager.GetString("Akinator_IntroDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Akinator.
        /// </summary>
        public static string Akinator_IntroTitle {
            get {
                return ResourceManager.GetString("Akinator_IntroTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type `{0}aa [answer]` where `[answer]` is &quot;yes&quot;, &quot;no&quot;, &quot;dunno&quot;, &quot;probably&quot;, or &quot;probably not&quot;..
        /// </summary>
        public static string Akinator_QuestionPromptInstructions {
            get {
                return ResourceManager.GetString("Akinator_QuestionPromptInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Question {0}**.
        /// </summary>
        public static string Akinator_QuestionPromptTitle {
            get {
                return ResourceManager.GetString("Akinator_QuestionPromptTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hmm... Akinator rejected the connection... This error has been logged..
        /// </summary>
        public static string Akinator_Rejected {
            get {
                return ResourceManager.GetString("Akinator_Rejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry; Akinator&apos;s `{0}` region servers are down at the moment! Try again later!.
        /// </summary>
        public static string Akinator_ServersDown {
            get {
                return ResourceManager.GetString("Akinator_ServersDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry; Akinator&apos;s `{0}` region servers have experienced a technical error! Try again later!.
        /// </summary>
        public static string Akinator_TechnicalError {
            get {
                return ResourceManager.GetString("Akinator_TechnicalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error has occurred! The error has been logged, and hopefully it should be resolved soon..
        /// </summary>
        public static string Akinator_UnknownError {
            get {
                return ResourceManager.GetString("Akinator_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oh dear! It seems like {0} is the last one standing! Therefore, they have won this round! We made it to {1}..
        /// </summary>
        public static string Counting_lastPlayerStanding {
            get {
                return ResourceManager.GetString("Counting_lastPlayerStanding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LAST LIFE!.
        /// </summary>
        public static string Counting_lifeCounter_LastLife {
            get {
                return ResourceManager.GetString("Counting_lifeCounter_LastLife", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} lives left!.
        /// </summary>
        public static string Counting_lifeCounter_MoreThanOne {
            get {
                return ResourceManager.GetString("Counting_lifeCounter_MoreThanOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has lost a life!.
        /// </summary>
        public static string Counting_loseLife_generic {
            get {
                return ResourceManager.GetString("Counting_loseLife_generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because {0} posted a non-number message, they have lost a life!.
        /// </summary>
        public static string Counting_loseLife_invalidFormat {
            get {
                return ResourceManager.GetString("Counting_loseLife_invalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} went a second time! Therefore, they lost a life!.
        /// </summary>
        public static string Counting_loseLife_multipleSuccessive {
            get {
                return ResourceManager.GetString("Counting_loseLife_multipleSuccessive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because the number {1} had been posted already, {0} has lost a life!.
        /// </summary>
        public static string Counting_loseLife_repeatedNumber {
            get {
                return ResourceManager.GetString("Counting_loseLife_repeatedNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because {0} skipped one or more numbers, they have lost a life!.
        /// </summary>
        public static string Counting_loseLife_skippedNumber {
            get {
                return ResourceManager.GetString("Counting_loseLife_skippedNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright, **new round!** I&apos;ll start..
        /// </summary>
        public static string Counting_newRound {
            get {
                return ResourceManager.GetString("Counting_newRound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oh dear, it seems {0} ran out of lives! They are eliminated from the game!.
        /// </summary>
        public static string Counting_playerEliminated {
            get {
                return ResourceManager.GetString("Counting_playerEliminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All players&apos; life counters have been reset!.
        /// </summary>
        public static string Counting_resetAllPlayers {
            get {
                return ResourceManager.GetString("Counting_resetAllPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wow! We made it to {1}, so we have a winner! {0} has won this round! Stay tuned for the next round!.
        /// </summary>
        public static string Counting_roundComplete {
            get {
                return ResourceManager.GetString("Counting_roundComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to {0}! Start from 1, and count as high as you can! Make sure to not skip or repeat any numbers and keep it as whole decimal numbers, or you&apos;ll get a strike! Also, once you post your number, you gotta wait for another person to post the next number before you post your next number! GOOD LUCK!.
        /// </summary>
        public static string Counting_startGame {
            get {
                return ResourceManager.GetString("Counting_startGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Reaction deleted!.
        /// </summary>
        public static string CustomReactions_DeleteCustomReaction {
            get {
                return ResourceManager.GetString("CustomReactions_DeleteCustomReaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Reaction edited!.
        /// </summary>
        public static string CustomReactions_EditCustomReaction {
            get {
                return ResourceManager.GetString("CustomReactions_EditCustomReaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *There are no custom reactions.*.
        /// </summary>
        public static string CustomReactions_lcr_noCustomReactions {
            get {
                return ResourceManager.GetString("CustomReactions_lcr_noCustomReactions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **There are {0} custom reactions in total.**.
        /// </summary>
        public static string CustomReactions_lcr_TotalCountMultiple {
            get {
                return ResourceManager.GetString("CustomReactions_lcr_TotalCountMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **There is one custom reaction in total.**.
        /// </summary>
        public static string CustomReactions_lcr_TotalCountOne {
            get {
                return ResourceManager.GetString("CustomReactions_lcr_TotalCountOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom reactions:.
        /// </summary>
        public static string CustomReactions_ListCustomReactions {
            get {
                return ResourceManager.GetString("CustomReactions_ListCustomReactions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Reaction created!.
        /// </summary>
        public static string CustomReactions_NewCustomReaction {
            get {
                return ResourceManager.GetString("CustomReactions_NewCustomReaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response #{0}:.
        /// </summary>
        public static string CustomReactions_response {
            get {
                return ResourceManager.GetString("CustomReactions_response", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please restart the bot for this change to take effect..
        /// </summary>
        public static string CustomReactions_restartPrompt {
            get {
                return ResourceManager.GetString("CustomReactions_restartPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Reaction entry:.
        /// </summary>
        public static string CustomReactions_ShowCustomReaction {
            get {
                return ResourceManager.GetString("CustomReactions_ShowCustomReaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to `Plus {0} more...`.
        /// </summary>
        public static string CustomReactions_ShowCustomReaction_more {
            get {
                return ResourceManager.GetString("CustomReactions_ShowCustomReaction_more", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple entries found. Results:.
        /// </summary>
        public static string CustomReactions_ShowCustomReaction_multipleResults {
            get {
                return ResourceManager.GetString("CustomReactions_ShowCustomReaction_multipleResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Reaction not found.
        /// </summary>
        public static string CustomReactions_ShowCustomReaction_noResults {
            get {
                return ResourceManager.GetString("CustomReactions_ShowCustomReaction_noResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No custom reactions with the trigger &quot;{0}&quot; were found..
        /// </summary>
        public static string CustomReactions_ShowCustomReaction_noResults_desc {
            get {
                return ResourceManager.GetString("CustomReactions_ShowCustomReaction_noResults_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trigger:.
        /// </summary>
        public static string CustomReactions_trigger {
            get {
                return ResourceManager.GetString("CustomReactions_trigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action requires the bot to have the &quot;{0}&quot; permission..
        /// </summary>
        public static string err_botMissingPermission {
            get {
                return ResourceManager.GetString("err_botMissingPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I can&apos;t assign that color if I don&apos;t have the Manage Roles or Administrator permission, or it&apos;s higher than my role..
        /// </summary>
        public static string err_cannotAssignColor {
            get {
                return ResourceManager.GetString("err_cannotAssignColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, custom colors have been disabled on this server!.
        /// </summary>
        public static string err_ccDisabled {
            get {
                return ResourceManager.GetString("err_ccDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It appear there aren&apos;t any colors in the color list. Type &quot;{0}setup&quot; to re-setup the bot, or type &quot;{0}addcolor&quot; to add a color to the color list..
        /// </summary>
        public static string err_colorListEmpty {
            get {
                return ResourceManager.GetString("err_colorListEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hex you typed in is not valid..
        /// </summary>
        public static string err_colorsInvalidHex {
            get {
                return ResourceManager.GetString("err_colorsInvalidHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The permissions on this color seem a bit unusual. This color can&apos;t be used until the permissions on it are neutralized..
        /// </summary>
        public static string err_colorUnusualPerms {
            get {
                return ResourceManager.GetString("err_colorUnusualPerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whoa there, slow down! You can execute another command in {0} second(s)!.
        /// </summary>
        public static string err_cooldownRequired {
            get {
                return ResourceManager.GetString("err_cooldownRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t quite get that. Type `{0}help` for help..
        /// </summary>
        public static string err_DMCommandError {
            get {
                return ResourceManager.GetString("err_DMCommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands in DMs are currently disabled. Try again later..
        /// </summary>
        public static string err_DMCommandsDisabled {
            get {
                return ResourceManager.GetString("err_DMCommandsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while processing this command: {0}.
        /// </summary>
        public static string err_exception {
            get {
                return ResourceManager.GetString("err_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have specified an invalid status. Valid types are: &quot;online&quot;, &quot;idle&quot;, &quot;dnd&quot;, and &quot;invisible&quot;.
        /// </summary>
        public static string err_invalidStatus {
            get {
                return ResourceManager.GetString("err_invalidStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file appears to be corrupt! Please report this to the bot owner..
        /// </summary>
        public static string err_malformedConfig {
            get {
                return ResourceManager.GetString("err_malformedConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command exists in more than one module. Therefore, it cannot be used at the moment. Please report this to @FairPlay137-TTS#8972 via DMs, or open an issue on GitHub (https://github.com/FairPlay137/Discord-PaletteBot).
        /// </summary>
        public static string err_multipleCommandDefs {
            get {
                return ResourceManager.GetString("err_multipleCommandDefs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command cannot be used because this bot&apos;s `config.json` does not specify a bot owner ID..
        /// </summary>
        public static string err_noBotOwner {
            get {
                return ResourceManager.GetString("err_noBotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have any colors on yourself!.
        /// </summary>
        public static string err_noColorsOnAuthor {
            get {
                return ResourceManager.GetString("err_noColorsOnAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That color does not exist..
        /// </summary>
        public static string err_nonexistentColor {
            get {
                return ResourceManager.GetString("err_nonexistentColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t find that module. (Did you type it wrong?).
        /// </summary>
        public static string err_nonexistentModule {
            get {
                return ResourceManager.GetString("err_nonexistentModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have permission to use this command. (Administrator permission required).
        /// </summary>
        public static string err_notAdmin {
            get {
                return ResourceManager.GetString("err_notAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, you must be the bot owner to do that!.
        /// </summary>
        public static string err_notBotOwner {
            get {
                return ResourceManager.GetString("err_notBotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oh dear...it seems that color doesn&apos;t exist anymore. I have removed it from the color list..
        /// </summary>
        public static string err_removedColor {
            get {
                return ResourceManager.GetString("err_removedColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That role is already in the color list..
        /// </summary>
        public static string err_roleAlreadyInColorList {
            get {
                return ResourceManager.GetString("err_roleAlreadyInColorList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t find a role in this server with that ID..
        /// </summary>
        public static string err_roleNotFound {
            get {
                return ResourceManager.GetString("err_roleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough arguments have been given..
        /// </summary>
        public static string err_tooFewArgs {
            get {
                return ResourceManager.GetString("err_tooFewArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many arguments have been given..
        /// </summary>
        public static string err_tooManyArgs {
            get {
                return ResourceManager.GetString("err_tooManyArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command cannot be executed in DMs..
        /// </summary>
        public static string err_unavailableInDMs {
            get {
                return ResourceManager.GetString("err_unavailableInDMs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command. Be sure you typed it correctly, or type &quot;{0}help&quot; for help..
        /// </summary>
        public static string err_unknownCommand {
            get {
                return ResourceManager.GetString("err_unknownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action requires you to have the &quot;{0}&quot; permission..
        /// </summary>
        public static string err_userMissingPermission {
            get {
                return ResourceManager.GetString("err_userMissingPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8-Ball&apos;s response:.
        /// </summary>
        public static string Fun_8ball_answer {
            get {
                return ResourceManager.GetString("Fun_8ball_answer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Question:.
        /// </summary>
        public static string Fun_8ball_question {
            get {
                return ResourceManager.GetString("Fun_8ball_question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A text portal has been created!.
        /// </summary>
        public static string Fun_textportal {
            get {
                return ResourceManager.GetString("Fun_textportal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text portal has opened! Say hello to the other end! :wave:.
        /// </summary>
        public static string Fun_textportal_connectionEstablished {
            get {
                return ResourceManager.GetString("Fun_textportal_connectionEstablished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text portal has been closed since the other end has deleted the channel it was leading to..
        /// </summary>
        public static string Fun_textportal_connectionLost_deletedChannel {
            get {
                return ResourceManager.GetString("Fun_textportal_connectionLost_deletedChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text portal has closed..
        /// </summary>
        public static string Fun_textportal_connectionLost_generic {
            get {
                return ResourceManager.GetString("Fun_textportal_connectionLost_generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text portal failed to open since no other text portals were found..
        /// </summary>
        public static string Fun_textportal_connectionLost_noResponse {
            get {
                return ResourceManager.GetString("Fun_textportal_connectionLost_noResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The other end has closed the text portal....
        /// </summary>
        public static string Fun_textportal_connectionLost_otherSideClose {
            get {
                return ResourceManager.GetString("Fun_textportal_connectionLost_otherSideClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text portal has closed itself due to overload!.
        /// </summary>
        public static string Fun_textportal_connectionLost_overload {
            get {
                return ResourceManager.GetString("Fun_textportal_connectionLost_overload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text portal has closed itself due to {0} seconds of inactivity..
        /// </summary>
        public static string Fun_textportal_connectionLost_timeout {
            get {
                return ResourceManager.GetString("Fun_textportal_connectionLost_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, text portals have been disabled by the bot owner!.
        /// </summary>
        public static string Fun_textportal_error_featureDisabled {
            get {
                return ResourceManager.GetString("Fun_textportal_error_featureDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a text portal due to the {0} portal limit on this bot being hit! Please try again later!.
        /// </summary>
        public static string Fun_textportal_error_limitReached {
            get {
                return ResourceManager.GetString("Fun_textportal_error_limitReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for another text portal....
        /// </summary>
        public static string Fun_textportal_waiting {
            get {
                return ResourceManager.GetString("Fun_textportal_waiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, your message hasn&apos;t been sent to the other end due to one or more of the words in your message being blacklisted on the other end..
        /// </summary>
        public static string Fun_textportal_wordBlacklisted_otherSide {
            get {
                return ResourceManager.GetString("Fun_textportal_wordBlacklisted_otherSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, your message hasn&apos;t been sent to the other end due to the word blacklist in effect on this server..
        /// </summary>
        public static string Fun_textportal_wordBlacklisted_yourSide {
            get {
                return ResourceManager.GetString("Fun_textportal_wordBlacklisted_yourSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait....
        /// </summary>
        public static string generic_PleaseWait {
            get {
                return ResourceManager.GetString("generic_PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aliases:.
        /// </summary>
        public static string Help_aliasList {
            get {
                return ResourceManager.GetString("Help_aliasList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There seem to be no commands in this module..
        /// </summary>
        public static string Help_commandListEmpty {
            get {
                return ResourceManager.GetString("Help_commandListEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 📃 Commands in module &quot;{0}&quot;:.
        /// </summary>
        public static string Help_commands_header {
            get {
                return ResourceManager.GetString("Help_commands_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hi there! {1}
        ///__**Here&apos;s what you can try:**__
        ///Type `{0}modules` to view all available modules.
        ///Type `{0}commands (module name)` to view all commands in a module.
        ///Type `{0}invite` to get the invite link for this bot!
        ///
        ///GitHub: https://github.com/FairPlay137/Discord-PaletteBot
        ///
        ///PaletteBot is a work-in-progress, so expect issues to arise.
        ///.
        /// </summary>
        public static string Help_DMContent {
            get {
                return ResourceManager.GetString("Help_DMContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you encounter an issue, please contact {0} (@{1}#{2})..
        /// </summary>
        public static string Help_DMContentContactBotOwner {
            get {
                return ResourceManager.GetString("Help_DMContentContactBotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you encounter an issue, please tell whoever the bot owner is..
        /// </summary>
        public static string Help_DMContentNoBotOwner {
            get {
                return ResourceManager.GetString("Help_DMContentNoBotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :mailbox: **Check your DMs!** I have sent some useful tips over..
        /// </summary>
        public static string Help_DMedHelp {
            get {
                return ResourceManager.GetString("Help_DMedHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m **{0}**, a fork of FairPlay137-TTS&apos;s PaletteBot!.
        /// </summary>
        public static string Help_intro {
            get {
                return ResourceManager.GetString("Help_intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m **PaletteBot**; a public bot written by FairPlay137-TTS!.
        /// </summary>
        public static string Help_introPublic {
            get {
                return ResourceManager.GetString("Help_introPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *{0} command(s)*.
        /// </summary>
        public static string Help_modules_commandcount {
            get {
                return ResourceManager.GetString("Help_modules_commandcount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 📃 Modules:.
        /// </summary>
        public static string Help_modules_header {
            get {
                return ResourceManager.GetString("Help_modules_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To list a module&apos;s commands, just type `{0}cmds ModuleName`.
        /// </summary>
        public static string Help_modules_moreInfo {
            get {
                return ResourceManager.GetString("Help_modules_moreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :mailbox: I would&apos;ve DMed you some helpful information, but I can&apos;t DM you! Please enable DMs and try this command again..
        /// </summary>
        public static string Help_unableToDM {
            get {
                return ResourceManager.GetString("Help_unableToDM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully banned {0} from the server..
        /// </summary>
        public static string Moderation_ban {
            get {
                return ResourceManager.GetString("Moderation_ban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t ban {0} due to them having a higher role..
        /// </summary>
        public static string Moderation_banFailed {
            get {
                return ResourceManager.GetString("Moderation_banFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully banned {0} from the server for reason: {1}.
        /// </summary>
        public static string Moderation_banWithReason {
            get {
                return ResourceManager.GetString("Moderation_banWithReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve been banned from `{0}`!.
        /// </summary>
        public static string Moderation_dm_ban_header {
            get {
                return ResourceManager.GetString("Moderation_dm_ban_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Banned.
        /// </summary>
        public static string Moderation_dm_banned {
            get {
                return ResourceManager.GetString("Moderation_dm_banned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **{0} by:**.
        /// </summary>
        public static string Moderation_dm_by {
            get {
                return ResourceManager.GetString("Moderation_dm_by", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve been kicked from `{0}`!.
        /// </summary>
        public static string Moderation_dm_kick_header {
            get {
                return ResourceManager.GetString("Moderation_dm_kick_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kicked.
        /// </summary>
        public static string Moderation_dm_kicked {
            get {
                return ResourceManager.GetString("Moderation_dm_kicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (no reason specified).
        /// </summary>
        public static string Moderation_dm_NoReasonSpecified {
            get {
                return ResourceManager.GetString("Moderation_dm_NoReasonSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reason:.
        /// </summary>
        public static string Moderation_dm_reason {
            get {
                return ResourceManager.GetString("Moderation_dm_reason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :no_entry_sign: **Couldn&apos;t DM the target: `{0}`**.
        /// </summary>
        public static string Moderation_DMFailed {
            get {
                return ResourceManager.GetString("Moderation_DMFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully hackbanned user ID {0}..
        /// </summary>
        public static string Moderation_hackban {
            get {
                return ResourceManager.GetString("Moderation_hackban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully kicked {0} from the server..
        /// </summary>
        public static string Moderation_kick {
            get {
                return ResourceManager.GetString("Moderation_kick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t kick {0} due to them having a higher role..
        /// </summary>
        public static string Moderation_kickFailed {
            get {
                return ResourceManager.GetString("Moderation_kickFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This channel has been placed on lockdown for {0}..
        /// </summary>
        public static string Moderation_lockdown {
            get {
                return ResourceManager.GetString("Moderation_lockdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to lock down channel..
        /// </summary>
        public static string Moderation_lockdown_fail {
            get {
                return ResourceManager.GetString("Moderation_lockdown_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lockdown on this channel has been lifted..
        /// </summary>
        public static string Moderation_lockdown_lift {
            get {
                return ResourceManager.GetString("Moderation_lockdown_lift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully kicked {0} from the server and deleted {1} day(s) of messages..
        /// </summary>
        public static string Moderation_softban {
            get {
                return ResourceManager.GetString("Moderation_softban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PaletteBot is not fully set up on this server yet. {0} needs to type &quot;{1}setup&quot; in order to finish the setup process..
        /// </summary>
        public static string old_err_notSetUpYet {
            get {
                return ResourceManager.GetString("old_err_notSetUpYet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup is already in progress!.
        /// </summary>
        public static string old_err_setupAlreadyInProgress {
            get {
                return ResourceManager.GetString("old_err_setupAlreadyInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t have permission to set up the bot. (This bot can only be set up by the server owner).
        /// </summary>
        public static string old_err_setupNotOwner {
            get {
                return ResourceManager.GetString("old_err_setupNotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hi there! Thank you for inviting PaletteBot to your server! {0}, please type `{1}setup` to set up the bot..
        /// </summary>
        public static string old_Palette_guildJoinText_setupRequired {
            get {
                return ResourceManager.GetString("old_Palette_guildJoinText_setupRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to :arrow_right: Continuing in DMs....
        /// </summary>
        public static string old_Palette_setup {
            get {
                return ResourceManager.GetString("old_Palette_setup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright, setup is complete. PaletteBot is ready for use!.
        /// </summary>
        public static string old_Palette_setup_complete {
            get {
                return ResourceManager.GetString("old_Palette_setup_complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First off, do you want me to create color roles for you in &quot;{0}&quot;?.
        /// </summary>
        public static string old_Palette_setup_step1 {
            get {
                return ResourceManager.GetString("old_Palette_setup_step1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright then. I won&apos;t create role colors..
        /// </summary>
        public static string old_Palette_setup_step1_responseno {
            get {
                return ResourceManager.GetString("old_Palette_setup_step1_responseno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, I will create color roles for you! The list of colors I will add is as follows:.
        /// </summary>
        public static string old_Palette_setup_step1_responseyes {
            get {
                return ResourceManager.GetString("old_Palette_setup_step1_responseyes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next, which roles do you want to be in the color list? (Type in the IDs of the roles, seperated by spaces).
        /// </summary>
        public static string old_Palette_setup_step2 {
            get {
                return ResourceManager.GetString("old_Palette_setup_step2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hmm...seems like I can&apos;t find the role with ID {0} in the server... Try again, perhaps?.
        /// </summary>
        public static string old_Palette_setup_step2_invalidids {
            get {
                return ResourceManager.GetString("old_Palette_setup_step2_invalidids", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finally, do you wish to enable custom color assignment on &quot;{0}&quot;?.
        /// </summary>
        public static string old_Palette_setup_step3 {
            get {
                return ResourceManager.GetString("old_Palette_setup_step3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright, custom colors are disabled for this server..
        /// </summary>
        public static string old_Palette_setup_step3_responseno {
            get {
                return ResourceManager.GetString("old_Palette_setup_step3_responseno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, users will be able to assign custom colors to themselves using the `{0}customcolor` command..
        /// </summary>
        public static string old_Palette_setup_step3_responseyes {
            get {
                return ResourceManager.GetString("old_Palette_setup_step3_responseyes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t quite understand that. Try again..
        /// </summary>
        public static string old_Palette_setup_syntaxerror {
            get {
                return ResourceManager.GetString("old_Palette_setup_syntaxerror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, I have added &quot;{0}&quot; to the color list..
        /// </summary>
        public static string Palette_addroletocolorlist {
            get {
                return ResourceManager.GetString("Palette_addroletocolorlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ***Poof!*** You&apos;re **{0}** now..
        /// </summary>
        public static string Palette_color {
            get {
                return ResourceManager.GetString("Palette_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ***Poof!*** You have been assigned the custom color hex **{0}**!.
        /// </summary>
        public static string Palette_customColor {
            get {
                return ResourceManager.GetString("Palette_customColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to __**Here&apos;s a list of colors you can assign to yourself on this server:**__.
        /// </summary>
        public static string Palette_listColors {
            get {
                return ResourceManager.GetString("Palette_listColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, I have removed &quot;{0}&quot; from the color list..
        /// </summary>
        public static string Palette_removerolefromcolorlist {
            get {
                return ResourceManager.GetString("Palette_removerolefromcolorlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ***Poof!*** You&apos;re no longer **{0}**!.
        /// </summary>
        public static string Palette_uncolor {
            get {
                return ResourceManager.GetString("Palette_uncolor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ***Poof!*** Your colors have been removed!.
        /// </summary>
        public static string Palette_uncolor_multipleRemoval {
            get {
                return ResourceManager.GetString("Palette_uncolor_multipleRemoval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **So you want to add me to your server? Here&apos;s my invite link:**.
        /// </summary>
        public static string Utils_invite {
            get {
                return ResourceManager.GetString("Utils_invite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holy smokes, that&apos;s REALLY fast!.
        /// </summary>
        public static string Utils_ping_footer1 {
            get {
                return ResourceManager.GetString("Utils_ping_footer1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pretty quick, if you ask me..
        /// </summary>
        public static string Utils_ping_footer2 {
            get {
                return ResourceManager.GetString("Utils_ping_footer2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection is OK..
        /// </summary>
        public static string Utils_ping_footer3 {
            get {
                return ResourceManager.GetString("Utils_ping_footer3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hmm...seems a bit slow....
        /// </summary>
        public static string Utils_ping_footer4 {
            get {
                return ResourceManager.GetString("Utils_ping_footer4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ve been waiting ages for the ball to come back!.
        /// </summary>
        public static string Utils_ping_footer5 {
            get {
                return ResourceManager.GetString("Utils_ping_footer5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Ping time was `{0}ms`!.
        /// </summary>
        public static string Utils_ping_pingtime {
            get {
                return ResourceManager.GetString("Utils_ping_pingtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dang, you got me!.
        /// </summary>
        public static string Utils_ping_subtitle1 {
            get {
                return ResourceManager.GetString("Utils_ping_subtitle1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That was fun! Let&apos;s play again!.
        /// </summary>
        public static string Utils_ping_subtitle2 {
            get {
                return ResourceManager.GetString("Utils_ping_subtitle2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wow, you&apos;re good at this!.
        /// </summary>
        public static string Utils_ping_subtitle3 {
            get {
                return ResourceManager.GetString("Utils_ping_subtitle3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oh, uh, my paddle seems to be turning a bit red... Is this normal?.
        /// </summary>
        public static string Utils_ping_subtitle4 {
            get {
                return ResourceManager.GetString("Utils_ping_subtitle4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right back at ya!.
        /// </summary>
        public static string Utils_ping_subtitle5 {
            get {
                return ResourceManager.GetString("Utils_ping_subtitle5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Pong!**.
        /// </summary>
        public static string Utils_ping_title {
            get {
                return ResourceManager.GetString("Utils_ping_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for Discord API to return the ball....
        /// </summary>
        public static string Utils_ping_wait {
            get {
                return ResourceManager.GetString("Utils_ping_wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Categories:.
        /// </summary>
        public static string Utils_sinfo_categories {
            get {
                return ResourceManager.GetString("Utils_sinfo_categories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created:.
        /// </summary>
        public static string Utils_sinfo_created {
            get {
                return ResourceManager.GetString("Utils_sinfo_created", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emojis:.
        /// </summary>
        public static string Utils_sinfo_customemotes {
            get {
                return ResourceManager.GetString("Utils_sinfo_customemotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom invite background.
        /// </summary>
        public static string Utils_sinfo_feature_INVITE_SPLASH {
            get {
                return ResourceManager.GetString("Utils_sinfo_feature_INVITE_SPLASH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VIP Features:.
        /// </summary>
        public static string Utils_sinfo_features {
            get {
                return ResourceManager.GetString("Utils_sinfo_features", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server ID:.
        /// </summary>
        public static string Utils_sinfo_id {
            get {
                return ResourceManager.GetString("Utils_sinfo_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active invite links:.
        /// </summary>
        public static string Utils_sinfo_invites {
            get {
                return ResourceManager.GetString("Utils_sinfo_invites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (none enabled).
        /// </summary>
        public static string Utils_sinfo_noFeatures {
            get {
                return ResourceManager.GetString("Utils_sinfo_noFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner:.
        /// </summary>
        public static string Utils_sinfo_owner {
            get {
                return ResourceManager.GetString("Utils_sinfo_owner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roles:.
        /// </summary>
        public static string Utils_sinfo_roles {
            get {
                return ResourceManager.GetString("Utils_sinfo_roles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text channels:.
        /// </summary>
        public static string Utils_sinfo_textchannels {
            get {
                return ResourceManager.GetString("Utils_sinfo_textchannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ({0} user(s)/{1} bot(s)).
        /// </summary>
        public static string Utils_sinfo_userbotratio {
            get {
                return ResourceManager.GetString("Utils_sinfo_userbotratio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members:.
        /// </summary>
        public static string Utils_sinfo_users {
            get {
                return ResourceManager.GetString("Utils_sinfo_users", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verification level:.
        /// </summary>
        public static string Utils_sinfo_verificationlevel {
            get {
                return ResourceManager.GetString("Utils_sinfo_verificationlevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string Utils_sinfo_verificationlevel_0 {
            get {
                return ResourceManager.GetString("Utils_sinfo_verificationlevel_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low.
        /// </summary>
        public static string Utils_sinfo_verificationlevel_1 {
            get {
                return ResourceManager.GetString("Utils_sinfo_verificationlevel_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium.
        /// </summary>
        public static string Utils_sinfo_verificationlevel_2 {
            get {
                return ResourceManager.GetString("Utils_sinfo_verificationlevel_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (╯°□°）╯︵ ┻━┻.
        /// </summary>
        public static string Utils_sinfo_verificationlevel_3 {
            get {
                return ResourceManager.GetString("Utils_sinfo_verificationlevel_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ┻━┻ミヽ(ಠ益ಠ)ﾉ彡┻━┻.
        /// </summary>
        public static string Utils_sinfo_verificationlevel_4 {
            get {
                return ResourceManager.GetString("Utils_sinfo_verificationlevel_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voice channels:.
        /// </summary>
        public static string Utils_sinfo_voicechannels {
            get {
                return ResourceManager.GetString("Utils_sinfo_voicechannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot ID:.
        /// </summary>
        public static string Utils_stats_botID {
            get {
                return ResourceManager.GetString("Utils_stats_botID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner:.
        /// </summary>
        public static string Utils_stats_botOwner {
            get {
                return ResourceManager.GetString("Utils_stats_botOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands executed this session:.
        /// </summary>
        public static string Utils_stats_commandsExecuted {
            get {
                return ResourceManager.GetString("Utils_stats_commandsExecuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hi! I&apos;m **{0}**! I&apos;m based off of PaletteBot, an open-source, multi-purpose bot! I&apos;m still under construction, so expect stuff to change as time goes on..
        /// </summary>
        public static string Utils_stats_description {
            get {
                return ResourceManager.GetString("Utils_stats_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hi! I&apos;m PaletteBot; an open-source, multi-purpose bot! I&apos;m still under construction, so expect stuff to change as time goes on..
        /// </summary>
        public static string Utils_stats_descriptionPublic {
            get {
                return ResourceManager.GetString("Utils_stats_descriptionPublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servers:.
        /// </summary>
        public static string Utils_stats_guilds {
            get {
                return ResourceManager.GetString("Utils_stats_guilds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Channels:.
        /// </summary>
        public static string Utils_stats_textChannels {
            get {
                return ResourceManager.GetString("Utils_stats_textChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About PaletteBot.
        /// </summary>
        public static string Utils_stats_title {
            get {
                return ResourceManager.GetString("Utils_stats_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uptime:.
        /// </summary>
        public static string Utils_stats_uptime {
            get {
                return ResourceManager.GetString("Utils_stats_uptime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voice Channels:.
        /// </summary>
        public static string Utils_stats_voiceChannels {
            get {
                return ResourceManager.GetString("Utils_stats_voiceChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright, incorrectly used commands will no longer show errors..
        /// </summary>
        public static string Utils_verboseErrors_off {
            get {
                return ResourceManager.GetString("Utils_verboseErrors_off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, incorrectly used commands will now show errors..
        /// </summary>
        public static string Utils_verboseErrors_on {
            get {
                return ResourceManager.GetString("Utils_verboseErrors_on", resourceCulture);
            }
        }
    }
}
